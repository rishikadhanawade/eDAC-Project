{"ast":null,"code":"var _jsxFileName = \"F:\\\\Shubham\\\\VITA\\\\Finale_Projects\\\\eMart\\\\Final Project (Reference)\\\\FrontEnd\\\\emart\\\\src\\\\components\\\\section\\\\UserProfile.js\";\nimport React from 'react';\nimport { Link } from 'react-router-dom';\nimport { DataContext } from '../Context';\nimport { Formik, Field, ErrorMessage } from 'formik';\nimport * as yup from 'yup';\nimport { Container, Row, Form, Col, Button, Card } from 'react-bootstrap';\nimport '../css/Profile.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport class UserProfile extends React.Component {\n  constructor(props) {\n    super(props);\n    this.currentCustID = JSON.parse(localStorage.getItem('currentCustID'));\n\n    this.onUpdateCust = e => {\n      let customer = {\n        cust_Name: document.getElementById(\"cnameTextbox\").value,\n        cust_PhoneNo: document.getElementById(\"mobileTextbox\").value,\n        cust_Address: document.getElementById(\"addrTextArea\").value,\n        cust_Email_ID: document.getElementById(\"emailTextbox\").value\n      };\n      let temp = JSON.stringify(customer);\n      fetch(\"http://localhost:8080/eMart/Customer/UpdateCustomer/\" + this.currentCustID, {\n        method: 'PUT',\n        headers: {\n          'Content-type': 'application/json'\n        },\n        body: temp\n      }).then(res => {\n        if (res.status == 200) {\n          window.alert(\"Record has been Updated Successfully..!!\");\n          document.getElementById(\"cnameTextbox\").disabled = true;\n          document.getElementById(\"addrTextArea\").disabled = true;\n          document.getElementById(\"mobileTextbox\").disabled = true;\n          document.getElementById(\"emailTextbox\").disabled = true;\n          document.getElementById(\"submitButton\").hidden = true;\n          document.getElementById(\"editButton\").hidden = false;\n        }\n      });\n      e.preventDefault();\n    };\n\n    this.onEditCust = e => {\n      let elementName = document.getElementById(\"cnameTextbox\");\n      elementName.disabled = false;\n      let elementAddr = document.getElementById(\"addrTextArea\");\n      elementAddr.disabled = false;\n      let elementMobile = document.getElementById(\"mobileTextbox\");\n      elementMobile.disabled = false;\n      let elementEmail = document.getElementById(\"emailTextbox\");\n      elementEmail.disabled = false;\n      let elementSubmitButton = document.getElementById(\"submitButton\");\n      elementSubmitButton.hidden = false;\n      let elementEditButton = document.getElementById(\"editButton\");\n      elementEditButton.hidden = true;\n    };\n\n    this.handleInputChange = event => {\n      this.setState({\n        [event.target.name]: event.target.value\n      });\n    };\n\n    this.state = {\n      cust_Name: \"\",\n      cust_PhoneNo: \"\",\n      cust_Address: \"\",\n      cust_Email_ID: \"\",\n      eMCardNo: \"\",\n      eMartPoints: \"\"\n    };\n  }\n\n  async componentWillMount() {\n    //alert(\"Hi from user profile\");\n    var currentCustID = JSON.parse(localStorage.getItem('currentCustID'));\n    const response = await fetch(\"http://localhost:8080/eMart/Customer/GetCustomer/\" + this.currentCustID);\n    const res = await response.json();\n    this.setState({\n      cust_Name: res.cust_Name,\n      cust_PhoneNo: res.cust_PhoneNo,\n      cust_Address: res.cust_Address,\n      cust_Email_ID: res.cust_Email_ID,\n      eMCardNo: res.eMCardNo,\n      eMartPoints: res.eMartPoints\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(Formik, {\n      enableReinitialize: true,\n      initialValues: {\n        cust_Name: this.state.cust_Name,\n        cust_PhoneNo: this.state.cust_PhoneNo,\n        cust_Address: this.state.cust_Address,\n        cust_Email_ID: this.state.cust_Email_ID\n      },\n      validationSchema: yup.object({\n        cust_Name: yup.string().strict().required('Please enter the customer name').min(3, 'Name should be minimum 3 characters long').max(30, 'Name can be maximum 15 characters long'),\n        cust_PhoneNo: yup.string().required('Please enter mobile number').min(10, 'Mobile number should be 10 digits long').max(10, 'Mobile number should be 10 digits long'),\n        cust_Address: yup.string().required(\"Please enter customer's address\").min(5, 'Address should be minimum 5 characters long').max(250, 'Address can be maximum 25 characters long'),\n        cust_Email_ID: yup.string().required(\"Please enter an email address\").email(\"Please enter a valid email address\").min(5, 'Address should be minimum 5 characters long').max(250, 'Address can be maximum 25 characters long')\n      }),\n      children: props => /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(Form, {\n          onSubmit: this.onUpdateCust,\n          children: [/*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 151,\n            columnNumber: 41\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 151,\n            columnNumber: 46\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"Name\",\n            children: \"Name: \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 152,\n            columnNumber: 41\n          }, this), /*#__PURE__*/_jsxDEV(Field, {\n            className: \"form-control\",\n            name: \"cust_Name\",\n            id: \"cnameTextbox\",\n            type: \"text\",\n            value: this.state.cust_Name,\n            onChange: this.handleInputChange,\n            disabled: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 153,\n            columnNumber: 41\n          }, this), /*#__PURE__*/_jsxDEV(ErrorMessage, {\n            component: \"div\",\n            name: \"cust_Name\",\n            className: \"error\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 154,\n            columnNumber: 41\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 154,\n            columnNumber: 121\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 154,\n            columnNumber: 127\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"Address\",\n            children: \"Address: \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 156,\n            columnNumber: 41\n          }, this), /*#__PURE__*/_jsxDEV(Field, {\n            className: \"form-control\",\n            name: \"cust_Address\",\n            id: \"addrTextArea\",\n            type: true,\n            as: \"textarea\",\n            value: this.state.cust_Address,\n            onChange: this.handleInputChange,\n            disabled: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 157,\n            columnNumber: 41\n          }, this), /*#__PURE__*/_jsxDEV(ErrorMessage, {\n            component: \"div\",\n            name: \"cust_Address\",\n            className: \"error\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 158,\n            columnNumber: 41\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 158,\n            columnNumber: 124\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 158,\n            columnNumber: 130\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"Mobile Number\",\n            children: \"Contact details: \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 160,\n            columnNumber: 41\n          }, this), /*#__PURE__*/_jsxDEV(Field, {\n            className: \"form-control\",\n            name: \"cust_PhoneNo\",\n            id: \"mobileTextbox\",\n            type: \"number\",\n            value: this.state.cust_PhoneNo,\n            onChange: this.handleInputChange,\n            disabled: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 161,\n            columnNumber: 41\n          }, this), /*#__PURE__*/_jsxDEV(ErrorMessage, {\n            component: \"div\",\n            name: \"cust_PhoneNo\",\n            className: \"error\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 162,\n            columnNumber: 41\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 162,\n            columnNumber: 124\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 162,\n            columnNumber: 130\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"Email Address\",\n            children: \"Email Address: \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 164,\n            columnNumber: 41\n          }, this), /*#__PURE__*/_jsxDEV(Field, {\n            className: \"form-control\",\n            name: \"cust_Email_ID\",\n            id: \"emailTextbox\",\n            type: \"email\",\n            value: this.state.cust_Email_ID,\n            onChange: this.handleInputChange,\n            disabled: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 165,\n            columnNumber: 41\n          }, this), /*#__PURE__*/_jsxDEV(ErrorMessage, {\n            component: \"div\",\n            name: \"cust_Email_ID\",\n            className: \"error\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 166,\n            columnNumber: 41\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 166,\n            columnNumber: 125\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 166,\n            columnNumber: 131\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"eMCard No.\",\n            children: \"eMCard No: \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 168,\n            columnNumber: 41\n          }, this), /*#__PURE__*/_jsxDEV(Field, {\n            className: \"form-control\",\n            name: \"eMCardNo\",\n            id: \"eMCardTextbox\",\n            type: \"number\",\n            value: this.state.eMCardNo,\n            disabled: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 169,\n            columnNumber: 41\n          }, this), /*#__PURE__*/_jsxDEV(ErrorMessage, {\n            component: \"div\",\n            name: \"eMCardNo\",\n            className: \"error\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 170,\n            columnNumber: 41\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 170,\n            columnNumber: 120\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 170,\n            columnNumber: 126\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"ePoints\",\n            children: \"ePoints Balance: \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 172,\n            columnNumber: 41\n          }, this), /*#__PURE__*/_jsxDEV(Field, {\n            className: \"form-control\",\n            name: \"eMartPoints\",\n            id: \"ePointsTextbox\",\n            type: \"number\",\n            value: this.state.eMartPoints,\n            disabled: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 173,\n            columnNumber: 41\n          }, this), /*#__PURE__*/_jsxDEV(ErrorMessage, {\n            component: \"div\",\n            name: \"eMartPoints\",\n            className: \"error\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 174,\n            columnNumber: 41\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 174,\n            columnNumber: 123\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 174,\n            columnNumber: 129\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"btn btn-dark mt-3\",\n            id: \"editButton\",\n            type: \"button\",\n            onClick: this.onEditCust,\n            children: \"Edit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 176,\n            columnNumber: 41\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"btn btn-dark mt-3\",\n            id: \"submitButton\",\n            type: \"submit\",\n            hidden: \"true\",\n            disabled: props.isValid == false,\n            children: \"Submit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 178,\n            columnNumber: 41\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 150,\n          columnNumber: 37\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 33\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 17\n    }, this);\n  }\n\n}\nexport default UserProfile;","map":{"version":3,"sources":["F:/Shubham/VITA/Finale_Projects/eMart/Final Project (Reference)/FrontEnd/emart/src/components/section/UserProfile.js"],"names":["React","Link","DataContext","Formik","Field","ErrorMessage","yup","Container","Row","Form","Col","Button","Card","UserProfile","Component","constructor","props","currentCustID","JSON","parse","localStorage","getItem","onUpdateCust","e","customer","cust_Name","document","getElementById","value","cust_PhoneNo","cust_Address","cust_Email_ID","temp","stringify","fetch","method","headers","body","then","res","status","window","alert","disabled","hidden","preventDefault","onEditCust","elementName","elementAddr","elementMobile","elementEmail","elementSubmitButton","elementEditButton","handleInputChange","event","setState","target","name","state","eMCardNo","eMartPoints","componentWillMount","response","json","render","object","string","strict","required","min","max","email","isValid"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport {Link} from 'react-router-dom'\r\nimport {DataContext} from '../Context'\r\nimport { Formik, Field, ErrorMessage } from 'formik';\r\nimport * as yup from 'yup';\r\nimport { Container, Row, Form, Col, Button ,Card} from 'react-bootstrap';\r\nimport '../css/Profile.css';\r\n\r\nexport class UserProfile extends React.Component\r\n{\r\n   currentCustID = JSON.parse(localStorage.getItem('currentCustID'));\r\n    constructor(props)\r\n    {\r\n        super(props);\r\n        this.state={\r\n                        cust_Name: \"\",\r\n                        cust_PhoneNo:\"\",\r\n                        cust_Address:\"\",\r\n                        cust_Email_ID:\"\",\r\n                        eMCardNo:\"\",\r\n                        eMartPoints:\"\"\r\n                    };\r\n    }\r\n    async componentWillMount()\r\n    {\r\n        \r\n        //alert(\"Hi from user profile\");\r\n        var currentCustID = JSON.parse(localStorage.getItem('currentCustID'));\r\n        const response=await fetch(\"http://localhost:8080/eMart/Customer/GetCustomer/\"+this.currentCustID);\r\n        const res=await response.json();\r\n        this.setState({cust_Name:res.cust_Name,\r\n                        cust_PhoneNo:res.cust_PhoneNo,\r\n                        cust_Address:res.cust_Address,\r\n                        cust_Email_ID:res.cust_Email_ID,\r\n                        eMCardNo:res.eMCardNo,\r\n                        eMartPoints:res.eMartPoints\r\n                    });\r\n       \r\n    }\r\n\r\n    onUpdateCust=(e)=>{\r\n                        \r\n                        let customer={\r\n                                        cust_Name:document.getElementById(\"cnameTextbox\").value,\r\n                                        cust_PhoneNo:document.getElementById(\"mobileTextbox\").value,\r\n                                        cust_Address:document.getElementById(\"addrTextArea\").value,\r\n                                        cust_Email_ID:document.getElementById(\"emailTextbox\").value\r\n                                    };\r\n                                    \r\n       \r\n        \r\n\r\n        let temp=JSON.stringify(customer);\r\n      \r\n        fetch(\"http://localhost:8080/eMart/Customer/UpdateCustomer/\"+this.currentCustID,{\r\n                                                                                                method:'PUT',\r\n                                                                                                headers:{'Content-type':'application/json'},\r\n                                                                                                body:temp\r\n                                                                                            })\r\n                                                                                            .then(res=>{if(res.status==200)\r\n                                                                                                {\r\n\r\n                                                                                                    window.alert(\"Record has been Updated Successfully..!!\");\r\n                                                                                                    document.getElementById(\"cnameTextbox\").disabled=true;\r\n                                                                                                    document.getElementById(\"addrTextArea\").disabled=true;\r\n                                                                                                    document.getElementById(\"mobileTextbox\").disabled=true;\r\n                                                                                                    document.getElementById(\"emailTextbox\").disabled=true;\r\n                                                                                                    document.getElementById(\"submitButton\").hidden=true;\r\n                                                                                                    document.getElementById(\"editButton\").hidden=false;\r\n                                                                                                }\r\n                                                                                            });\r\n        e.preventDefault();\r\n                                                                                        \r\n    }\r\n    \r\n   \r\n    onEditCust=(e)=>{\r\n                        let elementName=document.getElementById(\"cnameTextbox\");\r\n                        elementName.disabled=false;\r\n\r\n                        let elementAddr=document.getElementById(\"addrTextArea\");\r\n                        elementAddr.disabled=false;\r\n\r\n                        let elementMobile=document.getElementById(\"mobileTextbox\");\r\n                        elementMobile.disabled=false;\r\n\r\n                        let elementEmail=document.getElementById(\"emailTextbox\");\r\n                        elementEmail.disabled=false;\r\n\r\n                        let elementSubmitButton=document.getElementById(\"submitButton\");\r\n                        elementSubmitButton.hidden=false;\r\n\r\n                        let elementEditButton=document.getElementById(\"editButton\");\r\n                        elementEditButton.hidden=true;\r\n                    }\r\n\r\n                   \r\n                       \r\n    handleInputChange=(event)=>{\r\n                                 \r\n                                   this.setState({  \r\n                                       [event.target.name]: event.target.value\r\n                                   });  \r\n                              }             \r\n                    \r\n\r\n    render()\r\n    {\r\n        \r\n        return(\r\n                <Formik     enableReinitialize={true} \r\n                            initialValues={\r\n                                        {\r\n                                            cust_Name: this.state.cust_Name,\r\n                                            cust_PhoneNo: this.state.cust_PhoneNo,\r\n                                            cust_Address: this.state.cust_Address,\r\n                                            cust_Email_ID: this.state.cust_Email_ID\r\n                                        }\r\n                                    }   \r\n                            validationSchema={\r\n                                            yup.object({\r\n                                                            cust_Name: yup.string().strict()\r\n                                                                    .required('Please enter the customer name')\r\n                                                                    .min(3, 'Name should be minimum 3 characters long')\r\n                                                                    .max(30, 'Name can be maximum 15 characters long'),\r\n\r\n                                                            cust_PhoneNo: yup.string()\r\n                                                                    .required('Please enter mobile number')\r\n                                                                    .min(10, 'Mobile number should be 10 digits long')\r\n                                                                    .max(10, 'Mobile number should be 10 digits long'),\r\n\r\n                                                            cust_Address: yup.string()\r\n                                                                    .required(\"Please enter customer's address\")\r\n                                                                    .min(5, 'Address should be minimum 5 characters long')\r\n                                                                    .max(250, 'Address can be maximum 25 characters long'),\r\n\r\n                                                            cust_Email_ID: yup.string()\r\n                                                                    .required(\"Please enter an email address\")\r\n                                                                    .email(\"Please enter a valid email address\")\r\n                                                                    .min(5, 'Address should be minimum 5 characters long')\r\n                                                                    .max(250, 'Address can be maximum 25 characters long'),\r\n                                                        })\r\n                                                }\r\n                        \r\n                                >\r\n                {\r\n                    props => (\r\n                                <div>\r\n                                    {/* <h3>Personal Information</h3> */}\r\n                                    <Form onSubmit={this.onUpdateCust}>\r\n                                        <br/><br/>\r\n                                        <label htmlFor=\"Name\">Name: </label>\r\n                                        <Field className=\"form-control\" name=\"cust_Name\" id=\"cnameTextbox\" type=\"text\" value={this.state.cust_Name} onChange={this.handleInputChange} disabled></Field>\r\n                                        <ErrorMessage component=\"div\" name=\"cust_Name\" className=\"error\"></ErrorMessage><br /><br />\r\n\r\n                                        <label htmlFor=\"Address\">Address: </label>\r\n                                        <Field className=\"form-control\" name=\"cust_Address\" id=\"addrTextArea\" type as='textarea' value={this.state.cust_Address} onChange={this.handleInputChange} disabled></Field>\r\n                                        <ErrorMessage component=\"div\" name=\"cust_Address\" className=\"error\"></ErrorMessage><br /><br />\r\n\r\n                                        <label htmlFor=\"Mobile Number\">Contact details: </label>\r\n                                        <Field className=\"form-control\" name=\"cust_PhoneNo\" id=\"mobileTextbox\" type=\"number\" value={this.state.cust_PhoneNo} onChange={this.handleInputChange} disabled></Field>\r\n                                        <ErrorMessage component=\"div\" name=\"cust_PhoneNo\" className=\"error\"></ErrorMessage><br /><br />\r\n\r\n                                        <label htmlFor=\"Email Address\">Email Address: </label>\r\n                                        <Field className=\"form-control\" name=\"cust_Email_ID\" id=\"emailTextbox\" type=\"email\" value={this.state.cust_Email_ID} onChange={this.handleInputChange} disabled></Field>\r\n                                        <ErrorMessage component=\"div\" name=\"cust_Email_ID\" className=\"error\"></ErrorMessage><br /><br />\r\n\r\n                                        <label htmlFor=\"eMCard No.\">eMCard No: </label>\r\n                                        <Field className=\"form-control\" name=\"eMCardNo\" id=\"eMCardTextbox\" type=\"number\" value={this.state.eMCardNo} disabled></Field>\r\n                                        <ErrorMessage component=\"div\" name=\"eMCardNo\" className=\"error\"></ErrorMessage><br /><br />\r\n\r\n                                        <label htmlFor=\"ePoints\">ePoints Balance: </label>\r\n                                        <Field className=\"form-control\" name=\"eMartPoints\" id=\"ePointsTextbox\" type=\"number\" value={this.state.eMartPoints} disabled></Field>\r\n                                        <ErrorMessage component=\"div\" name=\"eMartPoints\" className=\"error\"></ErrorMessage><br /><br />\r\n\r\n                                        <button className=\"btn btn-dark mt-3\" id=\"editButton\" type=\"button\" onClick={this.onEditCust} >Edit</button>\r\n                            \r\n                                        <button className=\"btn btn-dark mt-3\" id=\"submitButton\" type=\"submit\" hidden=\"true\" disabled={props.isValid==false}>Submit</button>\r\n                                    </Form>\r\n                                </div>\r\n                            )\r\n                    }\r\n                </Formik>\r\n            )\r\n    }\r\n\r\n}\r\n\r\nexport default UserProfile;"]},"metadata":{},"sourceType":"module"}