{"ast":null,"code":"var _jsxFileName = \"F:\\\\Shubham\\\\VITA\\\\Finale_Projects\\\\eMart\\\\Final Project (Reference)\\\\FrontEnd\\\\emart\\\\src\\\\components\\\\section\\\\Products.js\";\nimport React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport { DataContext } from '../Context';\nimport '../css/Products.css';\nimport { Container, Row, Form, Col, Button, Card } from 'react-bootstrap';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport class Products extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      cate: []\n    };\n  }\n\n  async componentWillMount() {\n    console.log(this.props.match.params.id); // console.log(this.props.match.params.path);  \n\n    const response = await fetch(\"http://localhost:8080/eMart/Product/SpecificBrandProd/\" + this.props.match.params.id);\n    const res = await response.json(); // console.log(res);\n\n    this.setState({\n      cate: res\n    });\n  }\n\n  render() {\n    const {\n      category,\n      addCart\n    } = this.context;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"product\",\n      children: [/*#__PURE__*/_jsxDEV(Form, {\n        inline: true,\n        className: \"mt-3\",\n        children: /*#__PURE__*/_jsxDEV(Container, {\n          fluid: true,\n          children: /*#__PURE__*/_jsxDEV(Row, {\n            className: \"justify-content-md-center\",\n            children: [/*#__PURE__*/_jsxDEV(Col, {\n              md: 3,\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"\",\n                children: /*#__PURE__*/_jsxDEV(\"label\", {\n                  children: /*#__PURE__*/_jsxDEV(\"h4\", {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 35,\n                    columnNumber: 41\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 34,\n                  columnNumber: 37\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 33,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 32,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Col, {\n              xs: \"auto\",\n              className: \"\",\n              children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                htmlFor: \"brand\",\n                srOnly: true,\n                className: \"\",\n                children: \"Brand\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 40,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                id: \"filter1\",\n                placeholder: \"Brand\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 41,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(Button, {\n                type: \"submit\",\n                className: \"btn btn-dark\",\n                children: \" Apply \"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 44,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 39,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Col, {\n              md: 3\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 46,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 31,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Container, {\n        children: /*#__PURE__*/_jsxDEV(Row, {\n          className: \"justify-content-md-center\",\n          children: this.state.cate.map(prod =>\n          /*#__PURE__*/\n          // <div className=\"card\" key={prod.prodID}>\n          //     <Link to={`/${prod.prodID}`}>\n          //         <img src={prod.productImagePath} alt=\"\" width=\"60\" height=\"60\" />\n          //     </Link>\n          //     <div className=\"content\">\n          //         <h4>\n          //             <Link to={`/${prod.prodID}`}>{prod.prodName}</Link>\n          //         </h4>\n          //         <span>${prod.mrpPrice}</span>\n          //         <p>{prod.prodShortDesc}</p>\n          //         <button onClick={() => addCart(prod.prodID)}>Add to cart</button>\n          //     </div>\n          // </div>\n          _jsxDEV(Card, {\n            children: [/*#__PURE__*/_jsxDEV(Card.Img, {\n              variant: \"top\",\n              src: prod.productImagePath\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 70,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(Card.Body, {\n              className: \"text-center\",\n              children: [/*#__PURE__*/_jsxDEV(Card.Title, {\n                children: [\" \", prod.prodName]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 74,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(Card.Text, {\n                className: \"text-muted\",\n                children: [\"$\", prod.mrpPrice]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 75,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(Card.Text, {\n                style: {\n                  color: \"red\"\n                },\n                children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"checkbox\",\n                  value: \"\",\n                  id: \"\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 77,\n                  columnNumber: 41\n                }, this), \" eMcard : $\", prod.cardholdersPrice, \" ePts : \", prod.pointsToBeRedm]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 76,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(Button, {\n                variant: \"info\",\n                onClick: () => addCart(prod.prodID),\n                children: \"Add to cart\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 79,\n                columnNumber: 41\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 72,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 29\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 28\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 13\n    }, this);\n  }\n\n}\nProducts.contextType = DataContext;\nexport default Products;","map":{"version":3,"sources":["F:/Shubham/VITA/Finale_Projects/eMart/Final Project (Reference)/FrontEnd/emart/src/components/section/Products.js"],"names":["React","Component","Link","DataContext","Container","Row","Form","Col","Button","Card","Products","constructor","props","state","cate","componentWillMount","console","log","match","params","id","response","fetch","res","json","setState","render","category","addCart","context","map","prod","productImagePath","prodName","mrpPrice","color","cardholdersPrice","pointsToBeRedm","prodID","contextType"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,IAAT,QAAqB,kBAArB;AACA,SAASC,WAAT,QAA4B,YAA5B;AACA,OAAO,qBAAP;AACA,SAASC,SAAT,EAAoBC,GAApB,EAAyBC,IAAzB,EAA+BC,GAA/B,EAAoCC,MAApC,EAA4CC,IAA5C,QAAwD,iBAAxD;;AAGA,OAAO,MAAMC,QAAN,SAAuBT,SAAvB,CAAiC;AACpCU,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AAAEC,MAAAA,IAAI,EAAE;AAAR,KAAb;AAEH;;AAGuB,QAAlBC,kBAAkB,GAAG;AACvBC,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAKL,KAAL,CAAWM,KAAX,CAAiBC,MAAjB,CAAwBC,EAApC,EADuB,CAEvB;;AACA,UAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,2DAA2D,KAAKV,KAAL,CAAWM,KAAX,CAAiBC,MAAjB,CAAwBC,EAApF,CAA5B;AACA,UAAMG,GAAG,GAAG,MAAMF,QAAQ,CAACG,IAAT,EAAlB,CAJuB,CAKvB;;AACA,SAAKC,QAAL,CAAc;AAAEX,MAAAA,IAAI,EAAES;AAAR,KAAd;AACH;;AACDG,EAAAA,MAAM,GAAG;AACL,UAAM;AAAEC,MAAAA,QAAF;AAAYC,MAAAA;AAAZ,QAAwB,KAAKC,OAAnC;AAEA,wBACI;AAAK,MAAA,EAAE,EAAC,SAAR;AAAA,8BACI,QAAC,IAAD;AAAM,QAAA,MAAM,MAAZ;AAAa,QAAA,SAAS,EAAC,MAAvB;AAAA,+BACI,QAAC,SAAD;AAAW,UAAA,KAAK,MAAhB;AAAA,iCACI,QAAC,GAAD;AAAK,YAAA,SAAS,EAAC,2BAAf;AAAA,oCACI,QAAC,GAAD;AAAK,cAAA,EAAE,EAAE,CAAT;AAAA,qCACI;AAAK,gBAAA,SAAS,EAAC,EAAf;AAAA,uCACI;AAAA,yCACI;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,oBADJ,eAQI,QAAC,GAAD;AAAK,cAAA,EAAE,EAAC,MAAR;AAAe,cAAA,SAAS,EAAC,EAAzB;AAAA,sCACI,QAAC,IAAD,CAAM,KAAN;AAAY,gBAAA,OAAO,EAAC,OAApB;AAA4B,gBAAA,MAAM,MAAlC;AAAmC,gBAAA,SAAS,EAAC,EAA7C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADJ,eAEI,QAAC,IAAD,CAAM,OAAN;AAAc,gBAAA,EAAE,EAAC,SAAjB;AAA2B,gBAAA,WAAW,EAAC;AAAvC;AAAA;AAAA;AAAA;AAAA,sBAFJ,eAKI,QAAC,MAAD;AAAQ,gBAAA,IAAI,EAAC,QAAb;AAAsB,gBAAA,SAAS,EAAC,cAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBALJ;AAAA;AAAA;AAAA;AAAA;AAAA,oBARJ,eAeI,QAAC,GAAD;AAAK,cAAA,EAAE,EAAE;AAAT;AAAA;AAAA;AAAA;AAAA,oBAfJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,cADJ,eAuBI,QAAC,SAAD;AAAA,+BAAW,QAAC,GAAD;AAAK,UAAA,SAAS,EAAC,2BAAf;AAAA,oBAEH,KAAKhB,KAAL,CAAWC,IAAX,CAAgBgB,GAAhB,CAAoBC,IAAI;AAAA;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA,kBAAC,IAAD;AAAA,oCAEQ,QAAC,IAAD,CAAM,GAAN;AAAU,cAAA,OAAO,EAAC,KAAlB;AAAwB,cAAA,GAAG,EAAEA,IAAI,CAACC;AAAlC;AAAA;AAAA;AAAA;AAAA,oBAFR,eAII,QAAC,IAAD,CAAM,IAAN;AAAW,cAAA,SAAS,EAAC,aAArB;AAAA,sCAEI,QAAC,IAAD,CAAM,KAAN;AAAA,gCAAcD,IAAI,CAACE,QAAnB;AAAA;AAAA;AAAA;AAAA;AAAA,sBAFJ,eAGI,QAAC,IAAD,CAAM,IAAN;AAAW,gBAAA,SAAS,EAAC,YAArB;AAAA,gCAAoCF,IAAI,CAACG,QAAzC;AAAA;AAAA;AAAA;AAAA;AAAA,sBAHJ,eAIQ,QAAC,IAAD,CAAM,IAAN;AAAW,gBAAA,KAAK,EAAE;AAACC,kBAAAA,KAAK,EAAC;AAAP,iBAAlB;AAAA,wCACA;AAAO,kBAAA,IAAI,EAAC,UAAZ;AAAuB,kBAAA,KAAK,EAAC,EAA7B;AAAgC,kBAAA,EAAE,EAAC;AAAnC;AAAA;AAAA;AAAA;AAAA,wBADA,iBACqDJ,IAAI,CAACK,gBAD1D,cACoFL,IAAI,CAACM,cADzF;AAAA;AAAA;AAAA;AAAA;AAAA,sBAJR,eAOQ,QAAC,MAAD;AAAQ,gBAAA,OAAO,EAAC,MAAhB;AAAuB,gBAAA,OAAO,EAAE,MAAMT,OAAO,CAACG,IAAI,CAACO,MAAN,CAA7C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAPR;AAAA;AAAA;AAAA;AAAA;AAAA,oBAJJ;AAAA;AAAA;AAAA;AAAA;AAAA,kBAfJ;AAFG;AAAA;AAAA;AAAA;AAAA;AAAX;AAAA;AAAA;AAAA;AAAA,cAvBJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ;AA+DH;;AAlFmC;AAA3B5B,Q,CAMF6B,W,GAAcpC,W;AA+EzB,eAAeO,QAAf","sourcesContent":["import React, { Component } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { DataContext } from '../Context'\r\nimport '../css/Products.css'\r\nimport { Container, Row, Form, Col, Button, Card } from 'react-bootstrap';\r\n\r\n\r\nexport class Products extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = { cate: [] };\r\n\r\n    }\r\n    static contextType = DataContext;\r\n\r\n    async componentWillMount() {\r\n        console.log(this.props.match.params.id);\r\n        // console.log(this.props.match.params.path);  \r\n        const response = await fetch(\"http://localhost:8080/eMart/Product/SpecificBrandProd/\" + this.props.match.params.id);\r\n        const res = await response.json();\r\n        // console.log(res);\r\n        this.setState({ cate: res });\r\n    }\r\n    render() {\r\n        const { category, addCart } = this.context;\r\n\r\n        return (\r\n            <div id=\"product\">\r\n                <Form inline className=\"mt-3\">\r\n                    <Container fluid>\r\n                        <Row className=\"justify-content-md-center\">\r\n                            <Col md={3}>\r\n                                <div className=\"\">\r\n                                    <label>\r\n                                        <h4></h4>\r\n                                    </label>\r\n                                </div>\r\n                            </Col>\r\n                            <Col xs=\"auto\" className=\"\">\r\n                                <Form.Label htmlFor=\"brand\" srOnly className=\"\">Brand</Form.Label>\r\n                                <Form.Control id=\"filter1\" placeholder=\"Brand\" />\r\n                                {/* <Form.Label htmlFor=\"price\" srOnly className=\"\"> Price </Form.Label>\r\n                                <Form.Control id=\"filter2\" placeholder=\"Price\" /> */}\r\n                                <Button type=\"submit\" className=\"btn btn-dark\"> Apply </Button>\r\n                            </Col>\r\n                            <Col md={3}>\r\n                            </Col>\r\n                        </Row>\r\n                    </Container>\r\n                </Form>\r\n                <Container><Row className=\"justify-content-md-center\">\r\n                    {\r\n                        this.state.cate.map(prod => (\r\n                            // <div className=\"card\" key={prod.prodID}>\r\n                            //     <Link to={`/${prod.prodID}`}>\r\n                            //         <img src={prod.productImagePath} alt=\"\" width=\"60\" height=\"60\" />\r\n                            //     </Link>\r\n                            //     <div className=\"content\">\r\n                            //         <h4>\r\n                            //             <Link to={`/${prod.prodID}`}>{prod.prodName}</Link>\r\n                            //         </h4>\r\n                            //         <span>${prod.mrpPrice}</span>\r\n                            //         <p>{prod.prodShortDesc}</p>\r\n                            //         <button onClick={() => addCart(prod.prodID)}>Add to cart</button>\r\n                            //     </div>\r\n\r\n                            // </div>\r\n                            <Card>\r\n                                {/* <Link to={`/${prod.prodID}`}> */}\r\n                                    <Card.Img variant=\"top\" src={prod.productImagePath} />\r\n                                {/* </Link> */}\r\n                                <Card.Body className=\"text-center\">\r\n                                    {/* <Card.Title> <Link to={`/${prod.prodID}`}>{prod.prodName}</Link></Card.Title> */}\r\n                                    <Card.Title> {prod.prodName}</Card.Title>\r\n                                    <Card.Text className='text-muted'>${prod.mrpPrice}</Card.Text>\r\n                                        <Card.Text style={{color:\"red\"}}>\r\n                                        <input type=\"checkbox\" value=\"\" id=\"\"  /> eMcard : ${prod.cardholdersPrice} ePts : {prod.pointsToBeRedm}\r\n                                        </Card.Text>\r\n                                        <Button variant=\"info\" onClick={() => addCart(prod.prodID)}>Add to cart</Button>\r\n                                    \r\n                                </Card.Body>\r\n                            </Card>\r\n                        ))\r\n                    }\r\n                </Row>\r\n                </Container>\r\n            </div>\r\n\r\n        )\r\n    }\r\n}\r\n\r\nexport default Products\r\n"]},"metadata":{},"sourceType":"module"}