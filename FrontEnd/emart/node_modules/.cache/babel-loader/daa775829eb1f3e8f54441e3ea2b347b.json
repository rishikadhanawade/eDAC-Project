{"ast":null,"code":"var _jsxFileName = \"F:\\\\Shubham\\\\VITA\\\\Finale_Projects\\\\eMart\\\\Final Project (Reference)\\\\FrontEnd\\\\emart\\\\src\\\\components\\\\Context.js\";\nimport React, { Component } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const DataContext = /*#__PURE__*/React.createContext();\nexport class DataProvider extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      totalpts: 0,\n      cartLen: [],\n      //cart logo lenght\n      count: 1,\n      product: [],\n      cart: [],\n      total: 0,\n      Customer: []\n    };\n\n    this.addCart = id => {\n      console.log(id);\n      const {\n        product,\n        cart\n      } = this.state;\n      const check = cart.every(item => {\n        return item.prodID !== id;\n      });\n\n      if (check) {\n        const data = product.filter(product => {\n          return product.prodID === id;\n        }); // const x=cartLen+1;\n        // localStorage.setItem('cartLen',x);\n\n        this.setState({\n          cart: [...cart, ...data]\n        });\n      } else {\n        alert(\"The product has been added to cart.\");\n      }\n    };\n\n    this.reduction = id => {\n      const {\n        cart,\n        cartLen\n      } = this.state;\n      cart.forEach(item => {\n        if (item.prodID === id) {\n          item.qty === 1 ? item.qty = 1 : item.qty -= 1;\n        }\n      });\n      this.setState({\n        cart: cart\n      });\n      this.getTotal();\n    };\n\n    this.increase = id => {\n      const {\n        cart\n      } = this.state;\n      const cnt = this.state.count;\n      cart.forEach(item => {\n        console.log(item);\n\n        if (item.prodID === id) {\n          item.qty += 1;\n        }\n      });\n      this.setState({\n        cart: cart\n      });\n      this.getTotal();\n    };\n\n    this.removeProduct = id => {\n      if (window.confirm(\"Do you want to delete this product?\")) {\n        const {\n          cart,\n          cartLen\n        } = this.state;\n        cart.forEach((item, index) => {\n          if (item.prodID === id) {\n            cart.splice(index, 1);\n          }\n        });\n        this.setState({\n          cart: cart\n        });\n        this.getTotal();\n      }\n    };\n\n    this.getTotal = () => {\n      const {\n        cart,\n        Dely,\n        Discount\n      } = this.state;\n      const res = cart.reduce((prev, item) => {\n        return prev + item.mrpPrice * item.qty;\n      }, 0);\n      this.setState({\n        total: res\n      });\n    };\n\n    this.onDel = async (c, qty, ttb) => {\n      const {\n        cart,\n        total,\n        Dely,\n        Discount,\n        cartLen\n      } = this.state; //this.setState({cartLen:cart});\n      //console.log(cartLen);\n      //const y=((cart[c-1].mrpPrice)+Dely)-Discount;\n      //const y=((ttb+Dely)-Discount);\n      //console.log(y);\n\n      const x = total - ttb; //console.log(x);\n\n      this.setState({\n        total: x\n      }); //console.log(c-1);\n      //const l=cartLen.splice(c-1,1);\n\n      cart.splice(c - 1, 1); //For invoice\n\n      const inv = await fetch(\"http://localhost:8080/eMart/Invoice/DeleteData/\" + c, {\n        method: \"DELETE\"\n      });\n      const car = await fetch(\"http://localhost:8080/eMart/Cart/DeleteItem/\" + c, {\n        method: \"DELETE\"\n      });\n      this.setState({\n        cart: cart\n      });\n      window.location.reload();\n    };\n  }\n\n  componentDidUpdate(previousProps, previousState) {\n    const {\n      cart,\n      count,\n      Dely,\n      Discount,\n      total,\n      Customer,\n      cartLen\n    } = this.state;\n    localStorage.setItem('dataCart', JSON.stringify(this.state.cart));\n    localStorage.setItem('dataTotal', JSON.stringify(this.state.total));\n    localStorage.setItem('custData', JSON.stringify(this.state.Customer));\n    console.log(cart);\n  }\n\n  async componentWillMount() {\n    fetch(\"http://localhost:8080/eMart/Product/AllProducts\").then(res => res.json()).then(result => {\n      //console.log(result)\n      this.setState({\n        product: result\n      });\n    });\n    console.log();\n    fetch(\"http://localhost:8080/eMart/Customer/AllCustomers\").then(res => res.json()).then(result1 => {\n      console.log(result1);\n      this.setState({\n        Customer: result1\n      });\n    });\n  }\n\n  componentDidMount() {\n    const dataCart = JSON.parse(localStorage.getItem('dataCart'));\n\n    if (dataCart !== null) {\n      this.setState({\n        cart: dataCart\n      });\n    }\n\n    const dataTotal = JSON.parse(localStorage.getItem('dataTotal'));\n\n    if (dataTotal !== null) {\n      this.setState({\n        total: dataTotal\n      });\n    }\n  }\n\n  render() {\n    const {\n      cart,\n      total,\n      product,\n      count,\n      Dely,\n      Discount,\n      Customer,\n      cartLen,\n      totalpts\n    } = this.state;\n    const {\n      addCart,\n      reduction,\n      increase,\n      removeProduct,\n      getTotal,\n      onDel\n    } = this;\n    return /*#__PURE__*/_jsxDEV(DataContext.Provider, {\n      value: {\n        addCart,\n        cart,\n        reduction,\n        increase,\n        removeProduct,\n        total,\n        getTotal,\n        product,\n        count,\n        Dely,\n        Discount,\n        Customer,\n        onDel,\n        cartLen,\n        totalpts\n      },\n      children: this.props.children\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 161,\n      columnNumber: 13\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["F:/Shubham/VITA/Finale_Projects/eMart/Final Project (Reference)/FrontEnd/emart/src/components/Context.js"],"names":["React","Component","DataContext","createContext","DataProvider","state","totalpts","cartLen","count","product","cart","total","Customer","addCart","id","console","log","check","every","item","prodID","data","filter","setState","alert","reduction","forEach","qty","getTotal","increase","cnt","removeProduct","window","confirm","index","splice","Dely","Discount","res","reduce","prev","mrpPrice","onDel","c","ttb","x","inv","fetch","method","car","location","reload","componentDidUpdate","previousProps","previousState","localStorage","setItem","JSON","stringify","componentWillMount","then","json","result","result1","componentDidMount","dataCart","parse","getItem","dataTotal","render","props","children"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\r\n\r\n\r\nexport const DataContext = React.createContext();\r\n\r\nexport class DataProvider extends Component {\r\n\r\n    state = {\r\n        totalpts:0,\r\n        cartLen:[],                 //cart logo lenght\r\n        count:1,\r\n        product:[],\r\n        cart: [],\r\n        total: 0,\r\n        Customer:[]\r\n    };\r\n\r\n\r\n    addCart = (id) =>{\r\n        console.log(id);\r\n        const {product, cart} = this.state;\r\n        const check = cart.every(item =>{\r\n            return item.prodID !== id\r\n        })\r\n        if(check){\r\n            const data = product.filter(product =>{\r\n                return product.prodID === id\r\n            })\r\n            // const x=cartLen+1;\r\n            // localStorage.setItem('cartLen',x);\r\n            this.setState({cart: [...cart,...data]})\r\n\r\n        }else{\r\n            alert(\"The product has been added to cart.\")\r\n        }\r\n    };\r\n\r\n    reduction = id =>{\r\n        const { cart,cartLen } = this.state;\r\n        cart.forEach(item =>{\r\n            if(item.prodID === id){\r\n                item.qty === 1 ? item.qty = 1 : item.qty  -=1;\r\n            }\r\n        })\r\n        this.setState({cart: cart});\r\n        this.getTotal();\r\n    };\r\n\r\n    increase = id =>{\r\n        const { cart } = this.state;\r\n        const cnt=this.state.count;\r\n        cart.forEach(item =>{\r\n            console.log(item);\r\n            if(item.prodID === id){\r\n                item.qty += 1;\r\n            }\r\n        })\r\n        this.setState({cart: cart});\r\n        this.getTotal();\r\n    };\r\n\r\n    removeProduct = id =>{\r\n        if(window.confirm(\"Do you want to delete this product?\")){\r\n            const {cart,cartLen} = this.state;\r\n            cart.forEach((item, index) =>{\r\n                if(item.prodID === id){\r\n                    cart.splice(index, 1)\r\n                }\r\n            })\r\n            this.setState({cart: cart});\r\n            this.getTotal();\r\n        }\r\n       \r\n    };\r\n\r\n    getTotal = ()=>{\r\n        const{cart,Dely,Discount} = this.state;\r\n        const res = cart.reduce((prev, item) => {\r\n            return (prev + (item.mrpPrice * item.qty));\r\n        },0)\r\n        this.setState({total: res})\r\n    };\r\n    \r\n    componentDidUpdate(previousProps, previousState) {\r\n        const{cart,count,Dely,Discount,total,Customer,cartLen} = this.state;\r\n        localStorage.setItem('dataCart', JSON.stringify(this.state.cart));\r\n        localStorage.setItem('dataTotal', JSON.stringify(this.state.total));\r\n        \r\n        localStorage.setItem('custData', JSON.stringify(this.state.Customer));\r\n\r\n        console.log(cart);\r\n        \r\n    };\r\n    async componentWillMount() {\r\n        fetch(\"http://localhost:8080/eMart/Product/AllProducts\")\r\n            .then(res => res.json())\r\n            .then(\r\n                (result) => {\r\n                    //console.log(result)\r\n                    this.setState({\r\n                        product: result\r\n                    });\r\n                    \r\n                }\r\n                \r\n            );\r\n            console.log();\r\n            fetch(\"http://localhost:8080/eMart/Customer/AllCustomers\")\r\n            .then(res => res.json())\r\n            .then(\r\n                (result1) => {\r\n                    console.log(result1)\r\n                    this.setState({\r\n                        Customer: result1\r\n                    });\r\n                    \r\n                }\r\n                \r\n            );\r\n            \r\n\r\n    }\r\n    componentDidMount(){\r\n        const dataCart = JSON.parse(localStorage.getItem('dataCart'));\r\n        if(dataCart !== null){\r\n            this.setState({cart: dataCart});\r\n        }\r\n        const dataTotal = JSON.parse(localStorage.getItem('dataTotal'));\r\n        if(dataTotal !== null){\r\n            this.setState({total: dataTotal});\r\n        }        \r\n    }\r\n   \r\n    onDel= async (c,qty,ttb)=>{\r\n        const {cart,total,Dely,Discount,cartLen} = this.state;\r\n        //this.setState({cartLen:cart});\r\n        //console.log(cartLen);\r\n        //const y=((cart[c-1].mrpPrice)+Dely)-Discount;\r\n        //const y=((ttb+Dely)-Discount);\r\n        //console.log(y);\r\n        const x=(total-ttb);     \r\n        //console.log(x);\r\n        this.setState({total:x});\r\n        //console.log(c-1);\r\n        //const l=cartLen.splice(c-1,1);\r\n        cart.splice(c-1,1);    //For invoice\r\n        \r\n        \r\n        const inv = await fetch(\"http://localhost:8080/eMart/Invoice/DeleteData/\" +c, { method: \"DELETE\" });\r\n        const car = await fetch(\"http://localhost:8080/eMart/Cart/DeleteItem/\" +c, { method: \"DELETE\" });\r\n        \r\n        this.setState({cart:cart});\r\n        window.location.reload();\r\n    }\r\n    \r\n\r\n    render() {\r\n        const {cart,total,product,count,Dely,Discount,Customer,cartLen,totalpts} = this.state;\r\n        const {addCart,reduction,increase,removeProduct,getTotal,onDel} = this;\r\n        return (\r\n            <DataContext.Provider \r\n            value={{addCart, cart, reduction,increase,removeProduct,total,getTotal,product,count,Dely,Discount,Customer,onDel,cartLen,totalpts}}>\r\n                {this.props.children}\r\n            </DataContext.Provider>\r\n        )\r\n    }\r\n}\r\n\r\n\r\n"]},"metadata":{},"sourceType":"module"}