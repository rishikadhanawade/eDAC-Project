{"ast":null,"code":"export default function validatelogin(values) {\n  let errors = {};\n\n  if (!values.email) {\n    errors.email = 'Email required';\n  } else if (!/\\S+@\\S+\\.\\S+/.test(values.email)) {\n    errors.email = 'Email address is invalid';\n  }\n\n  if (!values.password) {\n    errors.password = 'Password is required';\n  } else if (values.password.length < 6) {\n    errors.password = 'Password needs to be 6 characters or more';\n  }\n\n  const custData = JSON.parse(localStorage.getItem('custData'));\n  console.log(custData);\n  custData.forEach(data => {\n    //console.log(\"Hii\");\n    if (data.cust_Email_ID === values.email && data.cust_Password === values.password) {\n      localStorage.setItem('currentCust', JSON.stringify(data));\n      console.log(\"cust id is: \" + JSON.stringify(data.custid));\n      localStorage.setItem('currentCustID', JSON.stringify(data.custid));\n      errors = {};\n      custData.length = 0;\n    } else if (data.cust_Email_ID !== values.email || data.cust_Password !== values.password) {\n      errors.password = 'Invalid username or Password'; //console.log('false')\n    }\n  });\n  return errors;\n}","map":{"version":3,"sources":["F:/Shubham/VITA/Finale_Projects/eMart/Final Project (Reference)/FrontEnd/emart/src/components/section/validatelogin.js"],"names":["validatelogin","values","errors","email","test","password","length","custData","JSON","parse","localStorage","getItem","console","log","forEach","data","cust_Email_ID","cust_Password","setItem","stringify","custid"],"mappings":"AAAA,eAAe,SAASA,aAAT,CAAuBC,MAAvB,EAA+B;AAC1C,MAAIC,MAAM,GAAG,EAAb;;AAEA,MAAI,CAACD,MAAM,CAACE,KAAZ,EAAmB;AACfD,IAAAA,MAAM,CAACC,KAAP,GAAe,gBAAf;AACH,GAFD,MAEO,IAAI,CAAC,eAAeC,IAAf,CAAoBH,MAAM,CAACE,KAA3B,CAAL,EAAwC;AAC3CD,IAAAA,MAAM,CAACC,KAAP,GAAe,0BAAf;AACH;;AAED,MAAI,CAACF,MAAM,CAACI,QAAZ,EAAsB;AAClBH,IAAAA,MAAM,CAACG,QAAP,GAAkB,sBAAlB;AACH,GAFD,MAEO,IAAIJ,MAAM,CAACI,QAAP,CAAgBC,MAAhB,GAAyB,CAA7B,EAAgC;AACnCJ,IAAAA,MAAM,CAACG,QAAP,GAAkB,2CAAlB;AACH;;AAED,QAAME,QAAQ,GAAGC,IAAI,CAACC,KAAL,CAAWC,YAAY,CAACC,OAAb,CAAqB,UAArB,CAAX,CAAjB;AACAC,EAAAA,OAAO,CAACC,GAAR,CAAYN,QAAZ;AACAA,EAAAA,QAAQ,CAACO,OAAT,CAAiBC,IAAI,IAAI;AACrB;AACA,QAAIA,IAAI,CAACC,aAAL,KAAuBf,MAAM,CAACE,KAA9B,IAAuCY,IAAI,CAACE,aAAL,KAAuBhB,MAAM,CAACI,QAAzE,EAAmF;AAC/EK,MAAAA,YAAY,CAACQ,OAAb,CAAqB,aAArB,EAAoCV,IAAI,CAACW,SAAL,CAAeJ,IAAf,CAApC;AACAH,MAAAA,OAAO,CAACC,GAAR,CAAY,iBAAeL,IAAI,CAACW,SAAL,CAAeJ,IAAI,CAACK,MAApB,CAA3B;AACDV,MAAAA,YAAY,CAACQ,OAAb,CAAqB,eAArB,EAAsCV,IAAI,CAACW,SAAL,CAAeJ,IAAI,CAACK,MAApB,CAAtC;AACClB,MAAAA,MAAM,GAAC,EAAP;AACAK,MAAAA,QAAQ,CAACD,MAAT,GAAgB,CAAhB;AACH,KAND,MAOK,IAAIS,IAAI,CAACC,aAAL,KAAuBf,MAAM,CAACE,KAA9B,IAAuCY,IAAI,CAACE,aAAL,KAAuBhB,MAAM,CAACI,QAAzE,EAAmF;AACpFH,MAAAA,MAAM,CAACG,QAAP,GAAkB,8BAAlB,CADoF,CAEpF;AACH;AAEJ,GAdD;AAeA,SAAOH,MAAP;AACH","sourcesContent":["export default function validatelogin(values) {\r\n    let errors = {};\r\n\r\n    if (!values.email) {\r\n        errors.email = 'Email required';\r\n    } else if (!/\\S+@\\S+\\.\\S+/.test(values.email)) {\r\n        errors.email = 'Email address is invalid';\r\n    }\r\n\r\n    if (!values.password) {\r\n        errors.password = 'Password is required';\r\n    } else if (values.password.length < 6) {\r\n        errors.password = 'Password needs to be 6 characters or more';\r\n    }\r\n\r\n    const custData = JSON.parse(localStorage.getItem('custData'));\r\n    console.log(custData);\r\n    custData.forEach(data => {\r\n        //console.log(\"Hii\");\r\n        if (data.cust_Email_ID === values.email && data.cust_Password === values.password) {\r\n            localStorage.setItem('currentCust', JSON.stringify(data));\r\n            console.log(\"cust id is: \"+JSON.stringify(data.custid));\r\n           localStorage.setItem('currentCustID', JSON.stringify(data.custid));\r\n            errors={};\r\n            custData.length=0;\r\n        }\r\n        else if (data.cust_Email_ID !== values.email || data.cust_Password !== values.password) {\r\n            errors.password = 'Invalid username or Password';\r\n            //console.log('false')\r\n        }\r\n\r\n    })\r\n    return errors;\r\n}\r\n"]},"metadata":{},"sourceType":"module"}